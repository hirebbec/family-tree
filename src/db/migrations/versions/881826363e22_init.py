"""init

Revision ID: 881826363e22
Revises:
Create Date: 2024-12-07 00:06:24.946413

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "881826363e22"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "persons",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("surname", sa.String(), nullable=False),
        sa.Column("patronymic", sa.String(), nullable=False),
        sa.Column("Sex", sa.Enum("MAN", "WOMEN", name="sexenum"), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_persons_id"), "persons", ["id"], unique=False)
    op.create_table(
        "relationships",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("relative_id", sa.Integer(), nullable=False),
        sa.Column(
            "relationship_type",
            sa.Enum(
                "MOTHER",
                "FATHER",
                "SISTER",
                "BROTHER",
                "CHILD",
                name="relationshiptypeenum",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("person_id", "relative_id"),
    )
    op.create_index(op.f("ix_relationships_id"), "relationships", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_relationships_id"), table_name="relationships")
    op.drop_table("relationships")
    op.drop_index(op.f("ix_persons_id"), table_name="persons")
    op.drop_table("persons")
    # ### end Alembic commands ###
